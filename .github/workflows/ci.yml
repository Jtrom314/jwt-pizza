name: Deploy CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  content: write
  id-token: write

jobs:
  deploy-s3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: |
          npm run build
      - name: Install Playwright dependencies
        run: npx playwright install --with-deps chromium
      - name: Run tests
        run: npm run test:coverage
      - name: Update coverage and version
        run: |
          printf '{"version": "%s" }' $(date +'%Y%m%d.%H%M%S') > src/version.json
          coverage_pct=$(jq '.total.statements.pct' coverage/coverage-summary.json)
          color=$(echo "$coverage_pct < 80" | bc -l | awk '{if ($1) print "yellow"; else print "green"}')
          sed -i "s/^Coverage: .*/Coverage: $coverage_pct %/" README.md
          curl -o coverageBadge.svg https://img.shields.io/badge/Coverage-$coverage_pct%25-$color
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Update coverage and version [skip ci]" || echo "No changes to commit"
          git push
      - name: Create OIDC token to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE }}
      - name: Push to AWS S3
        run: |
          aws s3 cp dist s3://${{ secrets.APP_BUCKET }} --recursive
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"